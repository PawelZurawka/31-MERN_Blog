{"version":3,"sources":["components/layout/PageContainer/PageContainer.js","components/common/Logo/Logo.js","components/layout/MainMenu/MainMenu.js","components/features/NavBar/NavBar.js","components/layout/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","config.js","redux/postsRedux.js","components/common/Button/Button.js","components/common/SmallTitle/SmallTitle.js","components/common/HtmlBox/HtmlBox.js","components/features/PostSummary/PostSummary.js","utils/cutText/cutText.js","components/features/PostsList/PostsList.js","components/common/Spinner/Spinner.js","components/common/Alert/Alert.js","components/common/Pagination/Pagination.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/HomePage.js","components/features/PostsCounter/PostsCounter.js","components/features/PostsCounter/PostsCounterContainer.js","components/pages/Posts/PostsPage.js","components/pages/Contact/ContactPage.js","components/pages/NotFound/NotFoundPage.js","components/features/SinglePost/SinglePost.js","components/features/SinglePost/SinglePostContainer.js","components/pages/SinglePost/SinglePostPage.js","components/common/TextField/TextField.js","components/common/SectionTitle/SectionTitle.js","components/features/PostForm/PostForm.js","components/features/PostForm/PostFormContainer.js","components/pages/AddPost/AddPostPage.js","App.js","redux/store.js","index.js"],"names":["PageContainer","children","className","Logo","links","location","MainMenu","map","link","index","key","pathname","path","to","title","withRouter","props","NavBar","state","this","React","Component","MainLayout","PageTitle","BASE_URL","getRequest","posts","request","getPages","Math","ceil","amount","postsPerPage","createActionName","name","LOAD_POSTS","LOAD_SINGLE_POST","START_REQUEST","END_REQUEST","ERROR_REQUEST","RESET_REQUEST","LOAD_POSTS_PAGE","loadPosts","payload","type","startRequest","endRequest","errorRequest","error","resetRequest","loadPostsByPage","initialState","data","singlePost","presentPage","pending","success","Button","variant","otherProps","SmallTitle","HtmlBox","ReactHtmlParser","PostSummary","id","content","author","maxLength","length","substr","lastIndexOf","cutText","PostsList","post","Spinner","animationIn","animationOut","Alert","icon","Pagination","changePage","newPage","onPageChange","setState","initialPage","pages","onClick","Array","el","page","Posts","loadPostsPage","pagination","defaultProps","connect","dispatch","a","startAt","limit","axios","get","res","message","loadPostsByPageRequest","HomePage","PostsCounter","number","count","PostsPage","PostsCounterContainer","ContactPage","NotFoundPage","SinglePost","loadPost","match","params","appId","href","faFacebookSquare","loadSinglePostRequest","SinglePostPage","SinglePostContainer","TextField","value","label","onChange","SectionTitle","PostForm","handleChange","e","target","handleEditor","text","addPost","preventDefault","onSubmit","options","placeholder","toolbar","buttons","addPostRequest","AddPostPage","PostFormContainer","App","exact","component","Home","Contact","AddPost","NotFound","rootReducer","combineReducers","statePart","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d18c4888.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageContainer.scss';\n\nconst PageContainer = ({ children }) => (\n  <div className=\"container-fluid\">\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react'\r\n\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({ links, location }) => (\r\n  <h1 className=\"logo\">Blog.app</h1>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './MainMenu.scss';\r\n\r\nconst MainMenu = ({ links, location }) => (\r\n  <ul className=\"main-menu\">\r\n    { links.map((link, index) =>\r\n      <li key={index}>\r\n        <Link className={(location.pathname === link.path && 'active') || ''} to={link.path}>{link.title}</Link>\r\n      </li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nMainMenu.propTypes = {\r\n  links: PropTypes.arrayOf(PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nexport default withRouter(props => <MainMenu {...props}/>);\r\n","import React from 'react';\r\nimport Logo from '../../common/Logo/Logo';\r\nimport MainMenu from '../../layout/MainMenu/MainMenu';\r\nimport './NavBar.scss';\r\n\r\nclass NavBar extends React.Component {\r\n  state = {\r\n    links: [\r\n      { path: '/', title: 'Home' },\r\n      { path: '/posts/new', title: 'Add post' },\r\n      { path: '/posts', title: 'Posts' },\r\n      { path: '/contact', title: 'Contact' }\r\n    ]\r\n  };\r\n\r\n  render() {\r\n    const { links } = this.state;\r\n    return (\r\n      <nav className='navbar'>\r\n        <Logo />\r\n        <MainMenu links={links} />\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport PageContainer from '../PageContainer/PageContainer';\r\nimport NavBar from '../../features/NavBar/NavBar';\r\n\r\nconst MainLayout = ({ children }) => (\r\n  <PageContainer>\r\n    <NavBar />\r\n    {children}\r\n  </PageContainer>\r\n);\r\n\r\nexport default MainLayout;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageTitle.scss';\n\nconst PageTitle = ({ children }) => (\n  <h1 className=\"page-title\">\n     {children}\n  </h1>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default PageTitle;\n","export const API_URL = '/api';\r\nexport const BASE_URL = 'https://blog-mernapp.herokuapp.com/';\r\n","import axios from 'axios';\r\nimport { API_URL } from '../config';\r\n\r\n/* SELECTORS */\r\nexport const getPosts = ({ posts }) => posts.data;\r\nexport const getSinglePost = ({ posts }) => posts.singlePost;\r\nexport const getPostsCounter = ({ posts }) => posts.amount;\r\nexport const getRequest = ({ posts }) => posts.request;\r\nexport const getPages = ({ posts }) =>\r\n  Math.ceil(posts.amount / posts.postsPerPage);\r\nexport const getPresentPage = ({ posts }) => posts.presentPage;\r\n\r\n// action name creator\r\nconst reducerName = 'posts';\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\n/* ACTIONS */\r\nexport const LOAD_POSTS = createActionName('LOAD_POSTS');\r\nexport const LOAD_SINGLE_POST = createActionName('LOAD_SINGLE_POST');\r\nexport const START_REQUEST = createActionName('START_REQUEST');\r\nexport const END_REQUEST = createActionName('END_REQUEST');\r\nexport const ERROR_REQUEST = createActionName('ERROR_REQUEST');\r\nexport const RESET_REQUEST = createActionName('RESET_REQUEST');\r\nexport const LOAD_POSTS_PAGE = createActionName('LOAD_POSTS_PAGE');\r\n\r\n/* ACTION CREATORS */\r\nexport const loadPosts = payload => ({ payload, type: LOAD_POSTS });\r\nexport const loadSinglePost = payload => ({ payload, type: LOAD_SINGLE_POST });\r\nexport const startRequest = () => ({ type: START_REQUEST });\r\nexport const endRequest = () => ({ type: END_REQUEST });\r\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST });\r\nexport const resetRequest = () => ({ type: RESET_REQUEST });\r\nexport const loadPostsByPage = payload => ({ payload, type: LOAD_POSTS_PAGE });\r\n\r\n/* INITIAL STATE */\r\nconst initialState = {\r\n  data: [],\r\n  singlePost: {},\r\n  amount: 0,\r\n  postsPerPage: 10,\r\n  presentPage: 1,\r\n  request: {\r\n    pending: false,\r\n    error: null,\r\n    success: null\r\n  }\r\n};\r\n\r\n/* THUNKS */\r\nexport const loadPostsRequest = () => {\r\n  return async dispatch => {\r\n    dispatch(startRequest());\r\n    try {\r\n      let res = await axios.get(`${API_URL}/posts`);\r\n      dispatch(loadPosts(res.data));\r\n      dispatch(endRequest());\r\n    } catch (e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadSinglePostRequest = id => {\r\n  return async dispatch => {\r\n    dispatch(startRequest());\r\n    try {\r\n      let res = await axios.get(`${API_URL}/posts/${id}`);\r\n      dispatch(loadSinglePost(res.data));\r\n      dispatch(endRequest());\r\n    } catch (e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const addPostRequest = post => {\r\n  return async dispatch => {\r\n    dispatch(startRequest());\r\n    try {\r\n      let res = await axios.post(`${API_URL}/posts`, post);\r\n      dispatch(loadPosts(res.data));\r\n      dispatch(endRequest());\r\n    } catch (e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadPostsByPageRequest = (page, postsPerPage) => {\r\n  return async dispatch => {\r\n    dispatch(startRequest());\r\n    try {\r\n      const startAt = (page - 1) * postsPerPage;\r\n      const limit = postsPerPage;\r\n      let res = await axios.get(`${API_URL}/posts/range/${startAt}/${limit}`);\r\n      const payload = {\r\n        posts: res.data.posts,\r\n        amount: res.data.amount,\r\n        postsPerPage,\r\n        presentPage: page\r\n      };\r\n      dispatch(loadPostsByPage(payload));\r\n      dispatch(endRequest());\r\n    } catch (e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\n/* REDUCER */\r\n\r\nexport default function reducer(statePart = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case LOAD_POSTS:\r\n      return { ...statePart, data: action.payload };\r\n    case LOAD_SINGLE_POST:\r\n      return { ...statePart, singlePost: action.payload };\r\n    case START_REQUEST:\r\n      return {\r\n        ...statePart,\r\n        request: { pending: true, error: null, success: null }\r\n      };\r\n    case END_REQUEST:\r\n      return {\r\n        ...statePart,\r\n        request: { pending: false, error: null, success: true }\r\n      };\r\n    case ERROR_REQUEST:\r\n      return {\r\n        ...statePart,\r\n        request: { pending: false, error: action.error, success: false }\r\n      };\r\n    case RESET_REQUEST:\r\n      return {\r\n        ...statePart,\r\n        request: { pending: false, error: null, success: null }\r\n      };\r\n    case LOAD_POSTS_PAGE:\r\n      return {\r\n        ...statePart,\r\n        postsPerPage: action.payload.postsPerPage,\r\n        presentPage: action.payload.presentPage,\r\n        amount: action.payload.amount,\r\n        data: [...action.payload.posts]\r\n      };\r\n    default:\r\n      return statePart;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ variant = '', children, ...otherProps }) => (\r\n  <button { ...otherProps } className={ `button button--${variant}`}>\r\n    { children }\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SmallTitle.scss';\r\n\r\nconst SmallTitle = ({ children, ...otherProps }) => (\r\n  <h2 {...otherProps} className='small-title'>\r\n    {children}\r\n  </h2>\r\n);\r\n\r\nSmallTitle.propTypes = {\r\n  children: PropTypes.string\r\n};\r\n\r\nexport default SmallTitle;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst HtmlBox = ({ children, ...otherProps }) => (\r\n  <div {...otherProps} className='html-box'>\r\n    {ReactHtmlParser(children)}\r\n  </div>\r\n);\r\n\r\nHtmlBox.propTypes = {\r\n  children: PropTypes.string\r\n};\r\n\r\nexport default HtmlBox;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Button from '../../common/Button/Button';\r\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\r\nimport './PostSummary.scss';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport cutText from '../../../utils/cutText/cutText';\r\n\r\nconst PostSummary = ({ id, title, content, author }) => (\r\n  <article className={'post-summary'}>\r\n    <SmallTitle>{title}</SmallTitle>\r\n    <p>Author: {author}</p>\r\n    <HtmlBox>{cutText(content, 250)}</HtmlBox>\r\n    <Button variant={'primary'}>\r\n      <Link to={`/posts/${id}`}>Read more</Link>\r\n    </Button>\r\n  </article>\r\n);\r\n\r\nPostSummary.propTypes = {\r\n  id: PropTypes.string,\r\n  title: PropTypes.string,\r\n  author: PropTypes.string,\r\n  content: PropTypes.string\r\n};\r\n\r\nexport default PostSummary;\r\n","export default (content, maxLength) => {\r\n  if (content.length < 1) return 'Error';\r\n  if (content.length <= maxLength) return content;\r\n  return content.substr(0, content.lastIndexOf(' ', maxLength)) + '...';\r\n};\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport PostSummary from '../PostSummary/PostSummary';\r\n\r\nconst PostsList = ({ posts }) => (\r\n  <section className='posts-list'>\r\n    {posts.map(post => (\r\n      <PostSummary key={post.id} {...post} />\r\n    ))}\r\n  </section>\r\n);\r\n\r\nPostsList.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nexport default PostsList;\r\n","import React from 'react';\nimport { Animated } from 'react-animated-css';\n\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </Animated>\n);\n\nexport default Spinner;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated } from 'react-animated-css';\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ variant = '', children, ...otherProps }) => {\r\n\r\n  const icon = () => {\r\n    switch(variant) {\r\n      case 'info':\r\n        return <MdInfoOutline />\r\n      case 'success':\r\n        return <MdDone />\r\n      case 'warning':\r\n        return <MdErrorOutline />\r\n      case 'error':\r\n        return <MdErrorOutline />\r\n      default:\r\n        return <MdInfoOutline />\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  )\r\n\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Pagination.scss';\r\n\r\nclass Pagination extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      presentPage: this.props.initialPage || 1\r\n    };\r\n  }\r\n\r\n  changePage = newPage => {\r\n    const { onPageChange } = this.props;\r\n    this.setState({ presentPage: newPage });\r\n    onPageChange(newPage);\r\n  };\r\n\r\n  render() {\r\n    const { pages } = this.props;\r\n    const { presentPage } = this.state;\r\n    const { changePage } = this;\r\n\r\n    return (\r\n      <div className='pagination'>\r\n        <ul className='pagination__list'>\r\n          {presentPage > 1 ? (\r\n            <li\r\n              className='pagination__list__item'\r\n              onClick={() => changePage(presentPage - 1)}\r\n            >\r\n              &lt;\r\n            </li>\r\n          ) : (\r\n            ''\r\n          )}\r\n          {[...Array(pages)].map((el, page) => (\r\n            <li\r\n              key={++page}\r\n              onClick={() => {\r\n                changePage(page);\r\n              }}\r\n              className={`pagination__list__item${\r\n                page === presentPage ? ' pagination__list__item--active' : ''\r\n              }`}\r\n            >\r\n              {page}\r\n            </li>\r\n          ))}\r\n          {presentPage === pages && pages !== 0 ? (\r\n            ''\r\n          ) : (\r\n            <li\r\n              className='pagination__list__item'\r\n              onClick={() => changePage(presentPage + 1)}\r\n            >\r\n              &gt;\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  pages: PropTypes.number.isRequired,\r\n  initialPage: PropTypes.number,\r\n  onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport PostsList from '../PostsList/PostsList';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Pagination from '../../common/Pagination/Pagination';\r\n\r\nclass Posts extends React.Component {\r\n  componentDidMount() {\r\n    const { loadPostsByPage, initialPage, postsPerPage } = this.props;\r\n    loadPostsByPage(initialPage, postsPerPage);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { resetRequest } = this.props;\r\n    resetRequest();\r\n  }\r\n\r\n  loadPostsPage = page => {\r\n    const { loadPostsByPage, postsPerPage } = this.props;\r\n    loadPostsByPage(page, postsPerPage);\r\n  };\r\n\r\n  render() {\r\n    const { posts, request, pages, pagination, presentPage } = this.props;\r\n    const { loadPostsPage } = this;\r\n\r\n    if (\r\n      request.pending === false &&\r\n      request.success === true &&\r\n      posts.length > 0 &&\r\n      pagination === true\r\n    ) {\r\n      return (\r\n        <>\r\n          <PostsList posts={posts} />\r\n          <Pagination\r\n            pages={pages}\r\n            onPageChange={loadPostsPage}\r\n            initialPage={presentPage}\r\n          />\r\n        </>\r\n      );\r\n    } else if (\r\n      request.pending === false &&\r\n      request.success === true &&\r\n      posts.length > 0 &&\r\n      pagination === false\r\n    ) {\r\n      return (\r\n        <>\r\n          <PostsList posts={posts} />\r\n        </>\r\n      );\r\n    } else if (request.pending === false && request.error != null) {\r\n      return <Alert variant='error'>{request.error}</Alert>;\r\n    } else if (\r\n      request.pending === false &&\r\n      request.success === true &&\r\n      posts.length === 0\r\n    ) {\r\n      return <Alert variant='info'>No posts</Alert>;\r\n    } else if (request.pending === true || request.success === null) {\r\n      return <Spinner />;\r\n    } else {\r\n      return <Alert variant='info'>Something went wrong!</Alert>;\r\n    }\r\n  }\r\n}\r\n\r\nPosts.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  resetRequest: PropTypes.func.isRequired,\r\n  loadPostsByPage: PropTypes.func.isRequired\r\n};\r\n\r\nPosts.defaultProps = {\r\n  initialPage: 1,\r\n  postsPerPage: 10,\r\n  pagination: true\r\n};\r\n\r\nexport default Posts;\r\n","import { connect } from 'react-redux';\r\nimport {\r\n  getPosts,\r\n  getRequest,\r\n  loadPostsByPageRequest,\r\n  resetRequest,\r\n  getPages,\r\n  getPresentPage\r\n} from '../../../redux/postsRedux';\r\nimport Posts from './Posts';\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: getPosts(state),\r\n  request: getRequest(state),\r\n  pages: getPages(state),\r\n  presentPage: getPresentPage(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadPostsByPage: (page, postsPerPage) =>\r\n    dispatch(loadPostsByPageRequest(page, postsPerPage)),\r\n  resetRequest: () => dispatch(resetRequest())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Posts);\r\n","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst HomePage = () => (\r\n  <div>\r\n    <PageTitle>Blog</PageTitle>\r\n    <Posts pagination={false} postsPerPage={3} />\r\n  </div>\r\n);\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nclass PostsCounter extends React.Component {\r\n  render() {\r\n    const { count } = this.props;\r\n    let number;\r\n    if (count === 0) {\r\n      number = 'No posts';\r\n    } else {\r\n      number = count;\r\n    }\r\n    return <div>Posts amount: {number}</div>;\r\n  }\r\n}\r\nPostsCounter.propTypes = {\r\n  count: PropTypes.number\r\n};\r\n\r\nexport default PostsCounter;\r\n","import { connect } from 'react-redux';\r\nimport { getPostsCounter } from '../../../redux/postsRedux';\r\nimport PostsCounter from './PostsCounter';\r\n\r\nconst mapStateToProps = state => ({\r\n  count: getPostsCounter(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(PostsCounter);\r\n","import React from 'react';\r\n\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport PostsCounterContainer from '../../features/PostsCounter/PostsCounterContainer';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst PostsPage = () => (\r\n  <>\r\n    <PageTitle>Posts list</PageTitle>\r\n    <PostsCounterContainer />\r\n    <Posts />\r\n  </>\r\n);\r\n\r\nexport default PostsPage;\r\n","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\n\r\nconst ContactPage = () => (\r\n  <div>\r\n    <PageTitle>Contact</PageTitle>\r\n    <p>Your Favourite Blooger Ltd.</p>\r\n    <p>9432 Division Street</p>\r\n    <p>Stone Mountain, GA 30083</p>\r\n    <p>Mobile Number: 207-914-3411</p>\r\n  </div>\r\n);\r\n\r\nexport default ContactPage;\r\n","import React from 'react';\r\n\r\nconst NotFoundPage = () => <h1>404 Not Found</h1>;\r\n\r\nexport default NotFoundPage;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FacebookProvider, Comments, ShareButton } from 'react-facebook';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFacebookSquare } from '@fortawesome/free-brands-svg-icons';\r\nimport { BASE_URL } from '../../../config';\r\nimport './SinglePost.scss';\r\n\r\nclass SinglePost extends React.Component {\r\n  componentDidMount() {\r\n    const { loadPost, resetRequest, match } = this.props;\r\n    loadPost(match.params.id);\r\n    resetRequest();\r\n  }\r\n\r\n  render() {\r\n    const { post, request, location } = this.props;\r\n\r\n    if (\r\n      request.pending === false &&\r\n      request.success === true &&\r\n      post !== null\r\n    ) {\r\n      return (\r\n        <article>\r\n          <SmallTitle>{post.title}</SmallTitle>\r\n          <FacebookProvider appId='437479826881005'>\r\n            <ShareButton\r\n              className='fb-share-button'\r\n              href={`${BASE_URL}${location.pathname}`}\r\n            >\r\n              <FontAwesomeIcon icon={faFacebookSquare} className='fb-icon' />\r\n              Share on Facebook\r\n            </ShareButton>\r\n          </FacebookProvider>\r\n          <p>Author: {post.author}</p>\r\n          <HtmlBox>{post.content}</HtmlBox>\r\n          <FacebookProvider appId='437479826881005'>\r\n            <Comments href={`${BASE_URL}${location.pathname}`} />\r\n          </FacebookProvider>\r\n        </article>\r\n      );\r\n    } else if (request.pending === true || request.success === null) {\r\n      return <Spinner />;\r\n    } else if (request.pending === false && request.error !== null) {\r\n      return <Alert variant='error'>{request.error}</Alert>;\r\n    } else if (request.pending === false && request.success === true) {\r\n      return <Alert variant='info'>No posts</Alert>;\r\n    } else {\r\n      return <Alert variant='info'>Something went wrong!</Alert>;\r\n    }\r\n  }\r\n}\r\n\r\nSinglePost.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  loadPost: PropTypes.func.isRequired,\r\n  resetRequest: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withRouter(props => <SinglePost {...props} />);\r\n","import { connect } from 'react-redux';\r\nimport {\r\n  getSinglePost,\r\n  getRequest,\r\n  loadSinglePostRequest,\r\n  resetRequest\r\n} from '../../../redux/postsRedux';\r\nimport SinglePost from './SinglePost';\r\n\r\nconst mapStateToProps = state => ({\r\n  post: getSinglePost(state),\r\n  request: getRequest(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadPost: id => dispatch(loadSinglePostRequest(id)),\r\n  resetRequest: () => dispatch(resetRequest())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SinglePost);\r\n","import React from 'react';\r\nimport SinglePostContainer from '../../features/SinglePost/SinglePostContainer';\r\n\r\nconst SinglePostPage = () => <SinglePostContainer />;\r\n\r\nexport default SinglePostPage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextField.scss';\r\n\r\nconst TextField = ({ value, label, onChange, ...otherProps }) => (\r\n  <label className=\"text-field\">\r\n    <span className={`text-field__label ${(!value.length > 0) ? 'text-field__label--big' : ''}`}>{label}</span>\r\n    <input {...otherProps} value={value} onChange={onChange} className=\"text-field__input\" />\r\n  </label>\r\n);\r\n\r\nTextField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SectionTitle.scss';\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <h2 className=\"section-title\">\r\n     {children}\r\n  </h2>\r\n);\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n//import { connect } from 'react-redux';\r\nimport Editor from 'react-medium-editor';\r\nimport 'medium-editor/dist/css/medium-editor.css';\r\nimport 'medium-editor/dist/css/themes/default.css';\r\n\r\nimport TextField from '../../common/TextField/TextField';\r\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\r\nimport Button from '../../common/Button/Button';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\n\r\nimport './PostForm.scss';\r\n\r\nclass PostForm extends React.Component {\r\n  state = {\r\n    post: {\r\n      title: '',\r\n      author: '',\r\n      content: ''\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { resetRequest } = this.props;\r\n    resetRequest();\r\n  }\r\n\r\n  handleChange = e => {\r\n    const { post } = this.state;\r\n    this.setState({ post: { ...post, [e.target.name]: e.target.value } });\r\n  };\r\n\r\n  handleEditor = text => {\r\n    const { post } = this.state;\r\n    this.setState({ post: { ...post, content: text } });\r\n  };\r\n\r\n  addPost = e => {\r\n    const { addPost } = this.props;\r\n    const { post } = this.state;\r\n    e.preventDefault();\r\n    addPost(post);\r\n  };\r\n\r\n  render() {\r\n    const { post } = this.state;\r\n    const { handleChange, handleEditor, addPost } = this;\r\n    const { request } = this.props;\r\n\r\n    if (request.error) return <Alert variant='error'>{request.error}</Alert>;\r\n    else if (request.success)\r\n      return <Alert variant='success'>Post has been added!</Alert>;\r\n    else if (request.pending) return <Spinner />;\r\n    else\r\n      return (\r\n        <form onSubmit={addPost}>\r\n          <TextField\r\n            label='Title'\r\n            value={post.title}\r\n            onChange={handleChange}\r\n            name='title'\r\n          />\r\n          <TextField\r\n            label='Author'\r\n            value={post.author}\r\n            onChange={handleChange}\r\n            name='author'\r\n          />\r\n          <SectionTitle>Edit post content</SectionTitle>\r\n          <Editor\r\n            className='content-editor'\r\n            text={post.content}\r\n            onChange={handleEditor}\r\n            options={{\r\n              placeholder: false,\r\n              toolbar: {\r\n                buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3']\r\n              }\r\n            }}\r\n          />\r\n          <Button variant='primary'>Add post</Button>\r\n        </form>\r\n      );\r\n  }\r\n}\r\n\r\nPostForm.propTypes = {\r\n  request: PropTypes.object.isRequired,\r\n  addPost: PropTypes.func.isRequired\r\n};\r\n\r\nexport default PostForm;\r\n","import { connect } from 'react-redux';\r\nimport {\r\n  getRequest,\r\n  addPostRequest,\r\n  resetRequest\r\n} from '../../../redux/postsRedux';\r\nimport PostForm from './PostForm';\r\n\r\nconst mapStateToProps = state => ({\r\n  request: getRequest(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addPost: post => dispatch(addPostRequest(post)),\r\n  resetRequest: () => dispatch(resetRequest())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PostForm);\r\n","import React from 'react';\r\nimport PostFormContainer from '../../features/PostForm/PostFormContainer';\r\n\r\nconst AddPostPage = () => <PostFormContainer />;\r\n\r\nexport default AddPostPage;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport MainLayout from './components/layout/MainLayout/MainLayout';\r\n\r\n// import routes\r\nimport Home from './components/pages/Home/HomePage';\r\nimport Posts from './components/pages/Posts/PostsPage';\r\nimport Contact from './components/pages/Contact/ContactPage';\r\nimport NotFound from './components/pages/NotFound/NotFoundPage';\r\nimport SinglePost from './components/pages/SinglePost/SinglePostPage';\r\nimport AddPost from './components/pages/AddPost/AddPostPage';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <MainLayout>\r\n        <Switch>\r\n          <Route path='/' exact component={Home} />\r\n          <Route path='/posts' exact component={Posts} />\r\n          <Route path='/contact' exact component={Contact} />\r\n          <Route path='/posts/new' exact component={AddPost} />\r\n          <Route path='/posts/:id' exact component={SinglePost} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </MainLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n// import reducers\r\nimport posts from './postsRedux';\r\n\r\n// combine reducers\r\nconst rootReducer = combineReducers({\r\n  posts\r\n});\r\n\r\n// create store\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styles/global.scss';\r\nimport 'animate.css/animate.min.css';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nconst Root = () => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n"],"sourceRoot":""}